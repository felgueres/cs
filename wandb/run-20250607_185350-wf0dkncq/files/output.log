Loading GSM8K data...
Train examples: 7473
Test examples: 1319
Loading Gemma-2B with LoRA...
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:06<00:00,  3.47s/it]
Model device: mps:0
Model dtype: torch.float16
trainable params: 19,611,648 || all params: 2,525,784,064 || trainable%: 0.7765
Tokenizing datasets...
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 7473/7473 [00:01<00:00, 5179.86 examples/s]
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1319/1319 [00:00<00:00, 5350.80 examples/s]
No label_names provided for model class `PeftModelForCausalLM`. Since `PeftModel` hides base models input arguments, if label_names is not given, label_names can't be set automatically within `Trainer`. Note that empty label_names list will be used instead.
Starting training...
[34m[1mwandb[0m: [33mWARNING[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
  0%|                                                                 | 0/1404 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/Users/pablo/programming/cs/papers/01_lets_verify_step_by_step/train.py", line 147, in <module>
    trainer.train()
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/trainer.py", line 2240, in train
    return inner_training_loop(
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/trainer.py", line 2555, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/trainer.py", line 3745, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/trainer.py", line 3810, in compute_loss
    outputs = model(**inputs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/peft/peft_model.py", line 1757, in forward
    return self.base_model(
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/peft/tuners/tuners_utils.py", line 193, in forward
    return self.model.forward(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/utils/generic.py", line 969, in wrapper
    output = func(self, *args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/models/gemma/modeling_gemma.py", line 683, in forward
    outputs: BaseModelOutputWithPast = self.model(
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/utils/generic.py", line 969, in wrapper
    output = func(self, *args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/models/gemma/modeling_gemma.py", line 449, in forward
    layer_outputs = decoder_layer(
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/modeling_layers.py", line 48, in __call__
    return super().__call__(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/models/gemma/modeling_gemma.py", line 317, in forward
    hidden_states = self.mlp(hidden_states)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/transformers/models/gemma/modeling_gemma.py", line 87, in forward
    down_proj = self.down_proj(self.act_fn(self.gate_proj(x)) * self.up_proj(x))
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/pablo/programming/cs/venv/lib/python3.9/site-packages/peft/tuners/lora/layer.py", line 727, in forward
    result = result + lora_B(lora_A(dropout(x))) * scaling
RuntimeError: MPS backend out of memory (MPS allocated: 20.04 GB, other allocations: 359.77 MB, max allowed: 20.40 GB). Tried to allocate 256.00 MB on private pool. Use PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0 to disable upper limit for memory allocations (may cause system failure).
